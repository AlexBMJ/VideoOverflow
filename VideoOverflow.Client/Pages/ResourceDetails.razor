@page "/ResourceDetails/{id:int}"
@using VideoOverflow.Core.DTOs
@inject HttpClient _http
@inject NavigationManager _navManager
<PageTitle>@(_resource == null ? _resource?.SiteTitle : "Resource")</PageTitle>

@if (_resource != null) {
    <MudGrid Justify="Justify.Center" Spacing="1" Class="my-4">
        <h1>@_resource.SiteTitle</h1>
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Outlined="true" Class="mud-theme-primary d-flex align-center justify-center mud-width-full py-8">
                    <h3>Visit Page: <MudNavLink ForceLoad="true" Href="@_resource.SiteUrl">@_resource.SiteUrl</MudNavLink></h3>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudItem>
                    <h2>Categories</h2>
                </MudItem>
                <MudPaper Outlined="true" Class="d-flex align-center justify-center mud-width-full py-8">
                    <MudCard Elevation="0" Class="d-flex align-center justify-center mud-width-full py-8">
                        <MudCardContent>
                            @foreach (var category in _resource.Categories) {
                                <MudChip Class="mud-theme-secondary">@category</MudChip>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudItem>
                    <h2>Tags</h2>
                </MudItem>
                <MudPaper Outlined="true" Class="d-flex align-center justify-center mud-width-full py-8" Elevation="3">
                    @if (_resource.Tags.Count == 0) {
                        <MudChip Class="mud-theme-tertiary" Style="cursor: pointer;">No tags</MudChip>
                    }
                    else {
                        <MudCard Elevation="0" Class="d-flex align-center justify-center mud-width-full py-8">
                            <MudCardContent>
                                @foreach (var tag in _resource.Tags) {
                                    <MudChip Class="mud-theme-tertiary" Style="cursor: pointer;">@tag</MudChip>
                                }
                            </MudCardContent>
                        </MudCard>
                    }
                </MudPaper>
            </MudItem>
            <MudItem>
                <h2>Comments</h2>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Outlined="true" Class="d-flex align-center justify-center mud-width-full py-8">
                    @if (_resource.Comments.Count == 0) {
                            <MudChip Size="Size.Large" Class="mud-theme-primary">No Comments</MudChip>
                        }
                        else {
                            <MudList Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                                @foreach (var comment in _resource.Comments) {
                                    <MudListItem Avatar="@Icons.Filled.Person">
                                        @comment
                                        <MudToggleIconButton Icon="@Icons.Material.Outlined.ThumbUp" ToggledIcon="@Icons.Material.Filled.ThumbUp" Size="Size.Medium"/>
                                        <MudToggleIconButton Icon="@Icons.Material.Outlined.ThumbDown" ToggledIcon="@Icons.Material.Filled.ThumbDown" Size="Size.Medium"/>
                                    </MudListItem>
                                    <MudDivider/>
                                }
                            </MudList>
                        }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudGrid>
}

@code {

    [Parameter]
    public int id { get; set; }

    private ResourceDetailsDTO? _resource;

    protected override async Task OnInitializedAsync() {
        _resource = await _http.GetFromJsonAsync<ResourceDetailsDTO>($"Api/Resource/{id}");
        StateHasChanged();
    }

}