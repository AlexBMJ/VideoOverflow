@page "/Add"
@using Microsoft.AspNetCore.Components
@using VideoOverflow.Core.DTOs
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Create Resource</h1>

<hr />

<EditForm Model="@Resource" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="SiteTitle">Site Title</label>
        <InputText id="SiteTitle" @bind-Value="SiteTitle" class="form-control" />
    </div>
    <div class="form-group">
        <label for="SiteUrl">Site Url</label>
        <InputText id="SiteUrl" @bind-Value="SiteTitle" class="form-control" />
    </div>
    <div class="form-group">
        <label for="MaterialType">MaterialType</label>
        <InputText id="MaterialType" @bind-Value="MaterialType" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Author">Author</label>
        <InputNumber id="Author" @bind-Value="Author" class="form-control" />
    </div>
    <div class="form-group">
        <label for="LixNumber">LixNumber</label>
        <InputText id="LixNumber" @bind-Value="LixNumber" class="form-control" />
    </div>
    <div class="form-group">
            <label for="Language">Language</label>
            <InputText id="Language" @bind-Value="Language" class="form-control" />
        </div>
    <div class="form-group">
        <label for="Tags">Tags</label>
        <InputTextArea @bind-Value="Tags" class="form-control" rows="5" />
    </div>
    <div class="form-group">
        <label for="Categories">Powers</label>
        <InputTextArea @bind-Value="Categories" class="form-control" rows="5" />
    </div>
    
    <div class="form-group">
        <br />
        <button type="submit" class="btn btn-success">Create</button>
        <button type="reset" class="btn btn-secondary">Reset</button>
        <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>


@code {

    private ResourceCreateDTO Resource;
    private string ResourceType;
    private string SiteUrl;
    private string created;
    private string MaterialType;
    private string SiteTitle;
    private string? Author;
    private string LixNumber;
    private string Language;
    private string Tags;

    private string Categories;

    private async Task HandleValidSubmit()
    {
        Resource = new ResourceCreateDTO()
        {
            Created = DateTime.Parse(created),
            MaterialType = VideoOverflow.Core.ResourceType.Article,
            SiteUrl = SiteUrl,
            SiteTitle = SiteTitle,
            Author = Author,
            LixNumber = Int32.Parse(LixNumber),
            Language = Language
        };


        var response = await Http.PostAsJsonAsync("api/resources", Resource);

        if (response.IsSuccessStatusCode)
        {
            var created = await response.Content.ReadFromJsonAsync<ResourceDTO>();

            var uri = $"{NavigationManager.BaseUri}resource/{created?.Id}";

            NavigationManager.NavigateTo(uri);
        }
    }

    private void Cancel()
    {
        var uri = $"{NavigationManager.BaseUri}resources";

        NavigationManager.NavigateTo(uri);
    }

}
