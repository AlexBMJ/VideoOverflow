@page "/Browse"
@using VideoOverflow.Core
@using VideoOverflow.Core.Utils

<MudGrid Justify="Justify.Center" Spacing="1" Class="my-4">
    <MudItem lg="8" md="8" sm="7" xs="12">
        <MudTextField @bind-Value="_search" Label="Search" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Search" AdornmentColor="Color.Secondary"/>
    </MudItem>
    <MudItem lg="3" md="3" sm="3" xs="12">
        <MudSelect T="string" Label="Category" Strict="true" Variant="Variant.Outlined" Format="F2" AnchorOrigin="Origin.BottomCenter" AdornmentIcon="@Icons.Filled.Category">
            @foreach (var ctg in Enum.GetValues<CategoryType>()) {
                <MudSelectItem T="string" Value="@SeparateEnumWords(ctg.ToString())"/>
            }
        </MudSelect>
    </MudItem>
</MudGrid>

<MudDivider/>

<MudTable Items="_phElements" Hover="true" Bordered="true" Class="my-4">
    <RowTemplate>
        <MudTd>
            <MudGrid>
                <MudItem xl="2" lg="2" md="2" Class="d-flex align-center">@context.SiteTitle</MudItem>
                <MudItem xl="4" lg="4" md="4" Class="d-flex align-center">@context.SiteUrl</MudItem>
                <MudItem xl="2" lg="2" md="2" Class="d-flex align-center">@context.Author</MudItem>
                <MudItem xl="4" lg="4" md="4" Class="d-flex flex-wrap align-center">
                    @foreach (var tag in context.Tags) {
                        <MudChip Color="Color.Primary">@tag</MudChip>
                    }
                </MudItem>
            </MudGrid>
        </MudTd>
    </RowTemplate>
</MudTable>


@code {
    private static ResourceDTO phResource = new(0,
        ResourceType.Video,
        "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "youtube.com",
        "Docker Tutorial",
        "Dockerman47",
        "English",
        new[] { "Docker", "Tutorial", "Testitest", "Tagitag" },
        new[] { "Containerization" },
        Array.Empty<string>()
        );
    private ResourceDTO[] _phElements = {phResource,phResource};
    private string _search;

    private static string SeparateEnumWords(string str) 
        => str == str.ToUpper() ? str : Word.SeparateWords(str);

}